# üìå –í–æ–∑—å–º–∏—Ç–µ –ª—é–±—ã–µ 1-3 –∑–∞–¥–∞—á–∏ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π.
# –î–æ–±–∞–≤—å—Ç–µ –∫ –Ω–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
# –¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.


import argparse


def fibonachi(num):
    fib = []
    for i in range(1, num):
        if i == 1:
            fib.append(i)
        elif i == 2:
            fib.append(i)
        else:
            fib.append(fib[i - 3] + fib[i - 2])
    return fib


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='For fibonachi')
    parser.add_argument('fibonachi', metavar='Number', nargs=1, type=int, help='Enter integer number')
    args = parser.parse_args()
    print(fibonachi(*args.fibonachi))
